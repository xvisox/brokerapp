eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

server:
  port: 2115
spring:
  application:
    name: transactions
  config:
    import: optional:configserver:http://localhost:8888
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:transactions}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: 'transactionDto:pl.mimuw.transactions.payload.TransactionDto'
    bootstrap-servers: http://${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}

secret:
  api:
    key: "${FINHUB_API_KEY:ch79iihr01qt83gc52kgch79iihr01qt83gc52l0}"

application:
  config:
    users-url: http://${USERS_HOST:localhost}:${USERS_PORT:2116}/api/v1/users
